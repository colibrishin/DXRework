# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main", "*dev" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main", "*dev" ]
  schedule:
    - cron: '40 10 * * 6'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./DX

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  analyze:
    name: Analyze
    runs-on: 'windows-latest'
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

        vcpkgCommitId: [ '830f86fb309ad7167468a433a890b7415fbb90a5' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Setup anew (or from cache) vcpkg (and does not build any package)
      uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the
                                # action you need, `v10` in this case to stay up
                                # to date with fixes on the v11 branch.
      with:
        # This is the default location of the directory containing vcpkg sources.
        # Change it to the right location if needed.
        # vcpkgDirectory: '${{ github.workspace }}/vcpkg'

        # If not using a submodule for vcpkg sources, this specifies which commit
        # id must be checkout from a Git repo.
        # Note: it must not be set if using a Git submodule for vcpkg.
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'

        # This is only needed if the command `vcpkg install` must run at this step.
        # Instead it is highly suggested to let `run-cmake` to run vcpkg later on
        # using the vcpkg.cmake toolchain. The default is `false`.
        runVcpkgInstall: true

        # This is only needed if `runVpkgInstall` is `true`.
        # This glob expression used to locate the vcpkg.json and  use
        # its directory location as `working directory` when running `vcpkg install`.
        # Change it to match a single manifest file you want to use.
        # Note: do not use `${{ github.context }}` to compose the value as it
        # contains backslashes that would be misinterpreted. Instead
        # compose a value relative to the root of the repository using
        # `**/path/from/root/of/repo/to/vcpkg.json` to match the desired `vcpkg.json`.
        vcpkgJsonGlob: '**/vcpkg.json'

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    - name: Add MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: nuget restore

    - name: Integrate vcpkg
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: vcpkg integrate install

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
