#pragma once
#include "egGraphicMemoryPool.hpp"

namespace Engine::Graphics
{
	struct AccelStructBuffer
	{
		GraphicMemoryPool<
			D3D12_RAYTRACING_INSTANCE_DESCS_BYTE_ALIGNMENT,
			D3D12_HEAP_TYPE_UPLOAD,
			D3D12_RESOURCE_FLAG_NONE,
			D3D12_RESOURCE_STATE_GENERIC_READ> instanceDescPool;

		GraphicMemoryPool<
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT,
			D3D12_HEAP_TYPE_DEFAULT,
			D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS,
			D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE> resultPool;

		GraphicMemoryPool<
			D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT,
			D3D12_HEAP_TYPE_DEFAULT,
			D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS,
			D3D12_RESOURCE_STATE_UNORDERED_ACCESS> scratchPool;

		bool empty = true;
	};
}
